



CREATE COMPUTE MODULE conversion_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE data CHARACTER;
		SET data= CAST(InputRoot.BLOB.BLOB AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);
		--DECLARE kick CHARACTER SUBSTRING(data FROM tag);
		DECLARE tag INTEGER POSITION('<' IN data);
		DECLARE kick CHARACTER SUBSTRING(data FROM tag);
		DECLARE bbb BLOB CAST(kick AS BLOB CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);
		SET Environment.blbdata = bbb;
		CREATE LASTCHILD OF Environment.XML DOMAIN('XMLNSC') PARSE(Environment.blbdata,InputProperties.Encoding,InputProperties.CodedCharSetId);
		SET OutputRoot=InputRoot;
	END;
END MODULE;